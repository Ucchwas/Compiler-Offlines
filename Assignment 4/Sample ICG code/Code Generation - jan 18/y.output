Terminals unused in grammar

   DO
   DOUBLE
   CHAR
   BREAK
   SWITCH
   CASE
   DEFAULT
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN error

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier ID
   12               | parameter_list COMMA type_specifier
   13               | type_specifier ID
   14               | type_specifier

   15 compound_statement: LCURL statements RCURL
   16                   | LCURL RCURL

   17 var_declaration: type_specifier declaration_list SEMICOLON

   18 type_specifier: INT
   19               | FLOAT
   20               | VOID

   21 declaration_list: declaration_list COMMA ID
   22                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   23                 | ID
   24                 | ID LTHIRD CONST_INT RTHIRD

   25 statements: statement
   26           | statements statement

   27 statement: var_declaration
   28          | expression_statement
   29          | compound_statement
   30          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   31          | IF LPAREN expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement ELSE statement
   33          | WHILE LPAREN expression RPAREN statement
   34          | PRINTLN LPAREN ID RPAREN SEMICOLON
   35          | RETURN expression SEMICOLON

   36 expression_statement: SEMICOLON
   37                     | expression SEMICOLON

   38 variable: ID
   39         | ID LTHIRD expression RTHIRD

   40 expression: logic_expression
   41           | variable ASSIGNOP logic_expression

   42 logic_expression: rel_expression
   43                 | rel_expression LOGICOP rel_expression

   44 rel_expression: simple_expression
   45               | simple_expression RELOP simple_expression

   46 simple_expression: term
   47                  | simple_expression ADDOP term

   48 term: unary_expression
   49     | term MULOP unary_expression

   50 unary_expression: ADDOP unary_expression
   51                 | NOT unary_expression
   52                 | factor

   53 factor: variable
   54       | LPAREN expression RPAREN
   55       | CONST_INT
   56       | CONST_FLOAT
   57       | variable INCOP
   58       | variable DECOP


Terminals, with rules where they appear

$end (0) 0
error (256) 8
IF (258) 31 32
ELSE (259) 32
FOR (260) 30
WHILE (261) 33
DO (262)
INT (263) 18
FLOAT (264) 19
DOUBLE (265)
CHAR (266)
RETURN (267) 35
VOID (268) 20
BREAK (269)
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
ADDOP (274) 47 50
MULOP (275) 49
ASSIGNOP (276) 41
RELOP (277) 45
LOGICOP (278) 43
SEMICOLON (279) 7 17 34 35 36 37
COMMA (280) 11 12 21 22
LPAREN (281) 7 8 9 10 30 31 32 33 34 54
RPAREN (282) 7 8 9 10 30 31 32 33 34 54
LCURL (283) 15 16
RCURL (284) 15 16
LTHIRD (285) 22 24 39
RTHIRD (286) 22 24 39
INCOP (287) 57
DECOP (288) 58
CONST_INT (289) 22 24 55
CONST_FLOAT (290) 56
ID (291) 7 8 9 10 11 13 21 22 23 24 34 38 39
NOT (292) 51
PRINTLN (293) 34
THEN (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5 6, on right: 2 3
func_declaration (44)
    on left: 7 8, on right: 5
func_definition (45)
    on left: 9 10, on right: 6
parameter_list (46)
    on left: 11 12 13 14, on right: 7 8 9 11 12
compound_statement (47)
    on left: 15 16, on right: 9 10 29
var_declaration (48)
    on left: 17, on right: 4 27
type_specifier (49)
    on left: 18 19 20, on right: 7 8 9 10 11 12 13 14 17
declaration_list (50)
    on left: 21 22 23 24, on right: 17 21 22
statements (51)
    on left: 25 26, on right: 15 26
statement (52)
    on left: 27 28 29 30 31 32 33 34 35, on right: 25 26 30 31 32 33
expression_statement (53)
    on left: 36 37, on right: 28 30
variable (54)
    on left: 38 39, on right: 41 53 57 58
expression (55)
    on left: 40 41, on right: 30 31 32 33 35 37 39 54
logic_expression (56)
    on left: 42 43, on right: 40 41
rel_expression (57)
    on left: 44 45, on right: 42 43
simple_expression (58)
    on left: 46 47, on right: 44 45 47
term (59)
    on left: 48 49, on right: 46 47 49
unary_expression (60)
    on left: 50 51 52, on right: 48 49 50 51
factor (61)
    on left: 53 54 55 56 57 58, on right: 52


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   18 type_specifier: INT .

    $default  reduce using rule 18 (type_specifier)


State 2

   19 type_specifier: FLOAT .

    $default  reduce using rule 19 (type_specifier)


State 3

   20 type_specifier: VOID .

    $default  reduce using rule 20 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN parameter_list RPAREN error
    9 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . ID LPAREN RPAREN compound_statement
   17 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN parameter_list RPAREN error
    9 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID . LPAREN RPAREN compound_statement
   23 declaration_list: ID .
   24                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 23 (declaration_list)


State 14

   17 var_declaration: type_specifier declaration_list . SEMICOLON
   21 declaration_list: declaration_list . COMMA ID
   22                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 17
    COMMA      shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . parameter_list RPAREN error
    9 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 19

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   24 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   17 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 17 (var_declaration)


State 18

   21 declaration_list: declaration_list COMMA . ID
   22                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 19

   10 func_definition: type_specifier ID LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 24

    compound_statement  go to state 25


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list . RPAREN error
    9 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier ID
   12               | parameter_list . COMMA type_specifier

    COMMA   shift, and go to state 26
    RPAREN  shift, and go to state 27


State 21

   13 parameter_list: type_specifier . ID
   14               | type_specifier .

    ID  shift, and go to state 28

    $default  reduce using rule 14 (parameter_list)


State 22

   24 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 29


State 23

   21 declaration_list: declaration_list COMMA ID .
   22                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 30

    $default  reduce using rule 21 (declaration_list)


State 24

   15 compound_statement: LCURL . statements RCURL
   16                   | LCURL . RCURL

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    RCURL        shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statements            go to state 47
    statement             go to state 48
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 25

   10 func_definition: type_specifier ID LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 26

   11 parameter_list: parameter_list COMMA . type_specifier ID
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 58


State 27

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN . error
    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    error      shift, and go to state 59
    SEMICOLON  shift, and go to state 60
    LCURL      shift, and go to state 24

    compound_statement  go to state 61


State 28

   13 parameter_list: type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 29

   24 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 30

   22 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 62


State 31

   31 statement: IF . LPAREN expression RPAREN statement
   32          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 63


State 32

   30 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 64


State 33

   33 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 65


State 34

   35 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 66
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 35

   50 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable          go to state 67
    unary_expression  go to state 68
    factor            go to state 57


State 36

   36 expression_statement: SEMICOLON .

    $default  reduce using rule 36 (expression_statement)


State 37

   54 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 69
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 38

   16 compound_statement: LCURL RCURL .

    $default  reduce using rule 16 (compound_statement)


State 39

   55 factor: CONST_INT .

    $default  reduce using rule 55 (factor)


State 40

   56 factor: CONST_FLOAT .

    $default  reduce using rule 56 (factor)


State 41

   38 variable: ID .
   39         | ID . LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 70

    $default  reduce using rule 38 (variable)


State 42

   51 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable          go to state 67
    unary_expression  go to state 71
    factor            go to state 57


State 43

   34 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 44

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 45

   27 statement: var_declaration .

    $default  reduce using rule 27 (statement)


State 46

   17 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 73

    declaration_list  go to state 14


State 47

   15 compound_statement: LCURL statements . RCURL
   26 statements: statements . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    RCURL        shift, and go to state 74
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statement             go to state 75
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 48

   25 statements: statement .

    $default  reduce using rule 25 (statements)


State 49

   28 statement: expression_statement .

    $default  reduce using rule 28 (statement)


State 50

   41 expression: variable . ASSIGNOP logic_expression
   53 factor: variable .
   57       | variable . INCOP
   58       | variable . DECOP

    ASSIGNOP  shift, and go to state 76
    INCOP     shift, and go to state 77
    DECOP     shift, and go to state 78

    $default  reduce using rule 53 (factor)


State 51

   37 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 52

   40 expression: logic_expression .

    $default  reduce using rule 40 (expression)


State 53

   42 logic_expression: rel_expression .
   43                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 80

    $default  reduce using rule 42 (logic_expression)


State 54

   44 rel_expression: simple_expression .
   45               | simple_expression . RELOP simple_expression
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81
    RELOP  shift, and go to state 82

    $default  reduce using rule 44 (rel_expression)


State 55

   46 simple_expression: term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 46 (simple_expression)


State 56

   48 term: unary_expression .

    $default  reduce using rule 48 (term)


State 57

   52 unary_expression: factor .

    $default  reduce using rule 52 (unary_expression)


State 58

   11 parameter_list: parameter_list COMMA type_specifier . ID
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 84

    $default  reduce using rule 12 (parameter_list)


State 59

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error .

    $default  reduce using rule 8 (func_declaration)


State 60

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 61

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 62

   22 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 85


State 63

   31 statement: IF LPAREN . expression RPAREN statement
   32          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 86
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 64

   30 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    expression_statement  go to state 87
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 65

   33 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 88
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 66

   35 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 67

   53 factor: variable .
   57       | variable . INCOP
   58       | variable . DECOP

    INCOP  shift, and go to state 77
    DECOP  shift, and go to state 78

    $default  reduce using rule 53 (factor)


State 68

   50 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 50 (unary_expression)


State 69

   54 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 90


State 70

   39 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 91
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 71

   51 unary_expression: NOT unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 72

   34 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 92


State 73

   23 declaration_list: ID .
   24                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 23 (declaration_list)


State 74

   15 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 15 (compound_statement)


State 75

   26 statements: statements statement .

    $default  reduce using rule 26 (statements)


State 76

   41 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 67
    logic_expression   go to state 93
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 77

   57 factor: variable INCOP .

    $default  reduce using rule 57 (factor)


State 78

   58 factor: variable DECOP .

    $default  reduce using rule 58 (factor)


State 79

   37 expression_statement: expression SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


State 80

   43 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 67
    rel_expression     go to state 94
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 81

   47 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable          go to state 67
    term              go to state 95
    unary_expression  go to state 56
    factor            go to state 57


State 82

   45 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 67
    simple_expression  go to state 96
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 83

   49 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable          go to state 67
    unary_expression  go to state 97
    factor            go to state 57


State 84

   11 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 85

   22 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 22 (declaration_list)


State 86

   31 statement: IF LPAREN expression . RPAREN statement
   32          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 98


State 87

   30 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    expression_statement  go to state 99
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 88

   33 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 100


State 89

   35 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 35 (statement)


State 90

   54 factor: LPAREN expression RPAREN .

    $default  reduce using rule 54 (factor)


State 91

   39 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 101


State 92

   34 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 102


State 93

   41 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 41 (expression)


State 94

   43 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 43 (logic_expression)


State 95

   47 simple_expression: simple_expression ADDOP term .
   49 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 47 (simple_expression)


State 96

   45 rel_expression: simple_expression RELOP simple_expression .
   47 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81

    $default  reduce using rule 45 (rel_expression)


State 97

   49 term: term MULOP unary_expression .

    $default  reduce using rule 49 (term)


State 98

   31 statement: IF LPAREN expression RPAREN . statement
   32          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statement             go to state 103
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 99

   30 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 35
    LPAREN       shift, and go to state 37
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42

    variable           go to state 50
    expression         go to state 104
    logic_expression   go to state 52
    rel_expression     go to state 53
    simple_expression  go to state 54
    term               go to state 55
    unary_expression   go to state 56
    factor             go to state 57


State 100

   33 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statement             go to state 105
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 101

   39 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 39 (variable)


State 102

   34 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 103

   31 statement: IF LPAREN expression RPAREN statement .
   32          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 107

    $default  reduce using rule 31 (statement)


State 104

   30 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 105

   33 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 33 (statement)


State 106

   34 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 34 (statement)


State 107

   32 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statement             go to state 109
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 108

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 31
    FOR          shift, and go to state 32
    WHILE        shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    RETURN       shift, and go to state 34
    VOID         shift, and go to state 3
    ADDOP        shift, and go to state 35
    SEMICOLON    shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 24
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ID           shift, and go to state 41
    NOT          shift, and go to state 42
    PRINTLN      shift, and go to state 43

    compound_statement    go to state 44
    var_declaration       go to state 45
    type_specifier        go to state 46
    statement             go to state 110
    expression_statement  go to state 49
    variable              go to state 50
    expression            go to state 51
    logic_expression      go to state 52
    rel_expression        go to state 53
    simple_expression     go to state 54
    term                  go to state 55
    unary_expression      go to state 56
    factor                go to state 57


State 109

   32 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 32 (statement)


State 110

   30 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 30 (statement)
